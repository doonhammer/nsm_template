apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: template-dataplane
  name: template-dataplane
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: template-dataplane
  name: template-dataplane
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: template-dataplane
  name: template-dataplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: template-dataplane
subjects:
- kind: ServiceAccount
  name: template-dataplane
  namespace: default
---
apiVersion: extensions/v1beta1
kind: DaemonSet
spec:
  template:
    metadata:
      labels:
        app: template-dataplane
    spec:
      hostNetwork: True
      hostPID: True
      serviceAccount: template-dataplane
      containers:
        - name: template-dataplane
          image: networkservicemesh/template-dataplane:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          args:
          - --dataplane-socket=/var/lib/networkservicemesh/dataplane.sock
          volumeMounts:
          - name: dataplane-socket
            mountPath: /var/lib/networkservicemesh
          - name: run
            mountPath: /var/run
          - name: sys
            mountPath: /sys
      volumes:
      - hostPath:
          path: /var/lib/networkservicemesh
          type: DirectoryOrCreate
        name: dataplane-socket
      - hostPath:
          path: /var/run
          type: DirectoryOrCreate
        name: run
      - hostPath:
          path: /sys
          type: DirectoryOrCreate
        name: sys
metadata:
   name: template-dataplane
   namespace: default
