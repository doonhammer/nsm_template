// Code generated by protoc-gen-go.
// source: sidecardataplane.proto
// DO NOT EDIT!

/*
Package sidecardataplane is a generated protocol buffer package.

It is generated from these files:
	sidecardataplane.proto

It has these top-level messages:
	Pod
	BuildConnectRequest
	BuildConnectReply
	DeleteConnectRequest
	DeleteConnectReply
*/
package sidecardataplane

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/ligato/networkservicemesh/pkg/nsm/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NSMPodType int32

const (
	NSMPodType_DEFAULT_POD NSMPodType = 0
	NSMPodType_NSMCLIENT   NSMPodType = 1
	NSMPodType_NSE         NSMPodType = 2
)

var NSMPodType_name = map[int32]string{
	0: "DEFAULT_POD",
	1: "NSMCLIENT",
	2: "NSE",
}
var NSMPodType_value = map[string]int32{
	"DEFAULT_POD": 0,
	"NSMCLIENT":   1,
	"NSE":         2,
}

func (x NSMPodType) String() string {
	return proto.EnumName(NSMPodType_name, int32(x))
}
func (NSMPodType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Pod struct {
	Metadata  *common.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	IpAddress string           `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
}

func (m *Pod) Reset()                    { *m = Pod{} }
func (m *Pod) String() string            { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()               {}
func (*Pod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Pod) GetMetadata() *common.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Pod) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type BuildConnectRequest struct {
	SourcePod      *Pod `protobuf:"bytes,1,opt,name=source_pod,json=sourcePod" json:"source_pod,omitempty"`
	DestinationPod *Pod `protobuf:"bytes,2,opt,name=destination_pod,json=destinationPod" json:"destination_pod,omitempty"`
}

func (m *BuildConnectRequest) Reset()                    { *m = BuildConnectRequest{} }
func (m *BuildConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildConnectRequest) ProtoMessage()               {}
func (*BuildConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BuildConnectRequest) GetSourcePod() *Pod {
	if m != nil {
		return m.SourcePod
	}
	return nil
}

func (m *BuildConnectRequest) GetDestinationPod() *Pod {
	if m != nil {
		return m.DestinationPod
	}
	return nil
}

type BuildConnectReply struct {
	Built      bool   `protobuf:"varint,1,opt,name=built" json:"built,omitempty"`
	BuildError string `protobuf:"bytes,2,opt,name=build_error,json=buildError" json:"build_error,omitempty"`
}

func (m *BuildConnectReply) Reset()                    { *m = BuildConnectReply{} }
func (m *BuildConnectReply) String() string            { return proto.CompactTextString(m) }
func (*BuildConnectReply) ProtoMessage()               {}
func (*BuildConnectReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BuildConnectReply) GetBuilt() bool {
	if m != nil {
		return m.Built
	}
	return false
}

func (m *BuildConnectReply) GetBuildError() string {
	if m != nil {
		return m.BuildError
	}
	return ""
}

type DeleteConnectRequest struct {
	Pod     *Pod       `protobuf:"bytes,1,opt,name=pod" json:"pod,omitempty"`
	PodType NSMPodType `protobuf:"varint,2,opt,name=pod_type,json=podType,enum=sidecardataplane.NSMPodType" json:"pod_type,omitempty"`
}

func (m *DeleteConnectRequest) Reset()                    { *m = DeleteConnectRequest{} }
func (m *DeleteConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteConnectRequest) ProtoMessage()               {}
func (*DeleteConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteConnectRequest) GetPod() *Pod {
	if m != nil {
		return m.Pod
	}
	return nil
}

func (m *DeleteConnectRequest) GetPodType() NSMPodType {
	if m != nil {
		return m.PodType
	}
	return NSMPodType_DEFAULT_POD
}

type DeleteConnectReply struct {
	Deleted     bool   `protobuf:"varint,1,opt,name=deleted" json:"deleted,omitempty"`
	DeleteError string `protobuf:"bytes,2,opt,name=delete_error,json=deleteError" json:"delete_error,omitempty"`
}

func (m *DeleteConnectReply) Reset()                    { *m = DeleteConnectReply{} }
func (m *DeleteConnectReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteConnectReply) ProtoMessage()               {}
func (*DeleteConnectReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteConnectReply) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *DeleteConnectReply) GetDeleteError() string {
	if m != nil {
		return m.DeleteError
	}
	return ""
}

func init() {
	proto.RegisterType((*Pod)(nil), "sidecardataplane.Pod")
	proto.RegisterType((*BuildConnectRequest)(nil), "sidecardataplane.BuildConnectRequest")
	proto.RegisterType((*BuildConnectReply)(nil), "sidecardataplane.BuildConnectReply")
	proto.RegisterType((*DeleteConnectRequest)(nil), "sidecardataplane.DeleteConnectRequest")
	proto.RegisterType((*DeleteConnectReply)(nil), "sidecardataplane.DeleteConnectReply")
	proto.RegisterEnum("sidecardataplane.NSMPodType", NSMPodType_name, NSMPodType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BuildConnect service

type BuildConnectClient interface {
	RequestBuildConnect(ctx context.Context, in *BuildConnectRequest, opts ...grpc.CallOption) (*BuildConnectReply, error)
}

type buildConnectClient struct {
	cc *grpc.ClientConn
}

func NewBuildConnectClient(cc *grpc.ClientConn) BuildConnectClient {
	return &buildConnectClient{cc}
}

func (c *buildConnectClient) RequestBuildConnect(ctx context.Context, in *BuildConnectRequest, opts ...grpc.CallOption) (*BuildConnectReply, error) {
	out := new(BuildConnectReply)
	err := grpc.Invoke(ctx, "/sidecardataplane.BuildConnect/RequestBuildConnect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BuildConnect service

type BuildConnectServer interface {
	RequestBuildConnect(context.Context, *BuildConnectRequest) (*BuildConnectReply, error)
}

func RegisterBuildConnectServer(s *grpc.Server, srv BuildConnectServer) {
	s.RegisterService(&_BuildConnect_serviceDesc, srv)
}

func _BuildConnect_RequestBuildConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildConnectServer).RequestBuildConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sidecardataplane.BuildConnect/RequestBuildConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildConnectServer).RequestBuildConnect(ctx, req.(*BuildConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildConnect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sidecardataplane.BuildConnect",
	HandlerType: (*BuildConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestBuildConnect",
			Handler:    _BuildConnect_RequestBuildConnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sidecardataplane.proto",
}

// Client API for DeleteConnect service

type DeleteConnectClient interface {
	RequestDeleteConnect(ctx context.Context, in *DeleteConnectRequest, opts ...grpc.CallOption) (*DeleteConnectReply, error)
}

type deleteConnectClient struct {
	cc *grpc.ClientConn
}

func NewDeleteConnectClient(cc *grpc.ClientConn) DeleteConnectClient {
	return &deleteConnectClient{cc}
}

func (c *deleteConnectClient) RequestDeleteConnect(ctx context.Context, in *DeleteConnectRequest, opts ...grpc.CallOption) (*DeleteConnectReply, error) {
	out := new(DeleteConnectReply)
	err := grpc.Invoke(ctx, "/sidecardataplane.DeleteConnect/RequestDeleteConnect", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DeleteConnect service

type DeleteConnectServer interface {
	RequestDeleteConnect(context.Context, *DeleteConnectRequest) (*DeleteConnectReply, error)
}

func RegisterDeleteConnectServer(s *grpc.Server, srv DeleteConnectServer) {
	s.RegisterService(&_DeleteConnect_serviceDesc, srv)
}

func _DeleteConnect_RequestDeleteConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeleteConnectServer).RequestDeleteConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sidecardataplane.DeleteConnect/RequestDeleteConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeleteConnectServer).RequestDeleteConnect(ctx, req.(*DeleteConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeleteConnect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sidecardataplane.DeleteConnect",
	HandlerType: (*DeleteConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestDeleteConnect",
			Handler:    _DeleteConnect_RequestDeleteConnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sidecardataplane.proto",
}

func init() { proto.RegisterFile("sidecardataplane.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x5b, 0x6f, 0xd3, 0x40,
	0x10, 0x85, 0x71, 0x22, 0x48, 0x32, 0xe9, 0xc5, 0x6c, 0x03, 0x8a, 0x22, 0x10, 0xc5, 0xdc, 0x2a,
	0x84, 0x62, 0x29, 0x80, 0x78, 0x43, 0x2a, 0x8d, 0x91, 0x40, 0x4d, 0x30, 0x4e, 0x78, 0xb6, 0x36,
	0xde, 0x51, 0xba, 0xaa, 0xed, 0xdd, 0xee, 0xae, 0x01, 0xff, 0x06, 0xfe, 0x34, 0xf2, 0x05, 0xa8,
	0x93, 0x8a, 0x3c, 0x79, 0xf6, 0xe8, 0xec, 0x99, 0xf9, 0xc6, 0x36, 0xdc, 0xd7, 0x9c, 0x61, 0x44,
	0x15, 0xa3, 0x86, 0xca, 0x98, 0xa6, 0x38, 0x96, 0x4a, 0x18, 0x41, 0xec, 0x4d, 0x7d, 0xe4, 0xad,
	0xb9, 0xb9, 0xc8, 0x56, 0xe3, 0x48, 0x24, 0x6e, 0xcc, 0xd7, 0xd4, 0x08, 0x37, 0x45, 0xf3, 0x43,
	0xa8, 0x4b, 0x8d, 0xea, 0x3b, 0x8f, 0x30, 0x41, 0x7d, 0xe1, 0xca, 0xcb, 0xb5, 0x9b, 0xea, 0xc4,
	0xa5, 0x92, 0x6b, 0x37, 0x12, 0x49, 0x22, 0xd2, 0xfa, 0x51, 0x05, 0x3b, 0x01, 0xb4, 0x7d, 0xc1,
	0xc8, 0x2b, 0xe8, 0x26, 0x68, 0x68, 0x11, 0x3f, 0xb4, 0x8e, 0xad, 0x93, 0xfe, 0xc4, 0x1e, 0xd7,
	0xbe, 0x59, 0xad, 0x07, 0x7f, 0x1d, 0xe4, 0x21, 0x00, 0x97, 0x21, 0x65, 0x4c, 0xa1, 0xd6, 0xc3,
	0xd6, 0xb1, 0x75, 0xd2, 0x0b, 0x7a, 0x5c, 0x9e, 0x56, 0x82, 0xf3, 0xcb, 0x82, 0xa3, 0x0f, 0x19,
	0x8f, 0xd9, 0x99, 0x48, 0x53, 0x8c, 0x4c, 0x80, 0x57, 0x19, 0x6a, 0x43, 0xde, 0x00, 0x68, 0x91,
	0xa9, 0x08, 0x43, 0x29, 0x58, 0xdd, 0xe6, 0xde, 0x78, 0x8b, 0xd8, 0x17, 0x2c, 0xe8, 0x55, 0xc6,
	0x62, 0xb4, 0xf7, 0x70, 0xc8, 0x50, 0x1b, 0x9e, 0x52, 0xc3, 0x45, 0x5a, 0x5e, 0x6d, 0xfd, 0xef,
	0xea, 0xc1, 0x35, 0xb7, 0x2f, 0x98, 0xf3, 0x19, 0xee, 0x36, 0x87, 0x91, 0x71, 0x4e, 0x06, 0x70,
	0x7b, 0x95, 0xf1, 0xd8, 0x94, 0x53, 0x74, 0x83, 0xea, 0x40, 0x1e, 0x41, 0xbf, 0x28, 0x58, 0x88,
	0x4a, 0x09, 0x55, 0x83, 0x41, 0x29, 0x79, 0x85, 0xe2, 0xfc, 0x84, 0xc1, 0x14, 0x63, 0x34, 0xb8,
	0x41, 0xf6, 0x02, 0xda, 0x3b, 0x91, 0x0a, 0x07, 0x79, 0x07, 0x5d, 0x29, 0x58, 0x68, 0x72, 0x89,
	0x65, 0xfc, 0xc1, 0xe4, 0xc1, 0xb6, 0x7b, 0xbe, 0x98, 0xf9, 0x82, 0x2d, 0x73, 0x89, 0x41, 0x47,
	0x56, 0x85, 0xf3, 0x15, 0xc8, 0x46, 0xe7, 0x02, 0x63, 0x08, 0x1d, 0x56, 0xaa, 0xac, 0x06, 0xf9,
	0x73, 0x24, 0x8f, 0x61, 0xaf, 0x2a, 0x1b, 0x2c, 0xfd, 0x4a, 0x2b, 0x61, 0x5e, 0xbe, 0x05, 0xf8,
	0xd7, 0x89, 0x1c, 0x42, 0x7f, 0xea, 0x7d, 0x3c, 0xfd, 0x76, 0xbe, 0x0c, 0xfd, 0x2f, 0x53, 0xfb,
	0x16, 0xd9, 0x87, 0xde, 0x7c, 0x31, 0x3b, 0x3b, 0xff, 0xe4, 0xcd, 0x97, 0xb6, 0x45, 0x3a, 0xd0,
	0x9e, 0x2f, 0x3c, 0xbb, 0x35, 0xb9, 0x82, 0xbd, 0xeb, 0xfb, 0x24, 0x14, 0x8e, 0xea, 0x35, 0x34,
	0xe4, 0x67, 0xdb, 0x5c, 0x37, 0x7c, 0x13, 0xa3, 0x27, 0xbb, 0x6c, 0x32, 0xce, 0x27, 0x19, 0xec,
	0x37, 0xe0, 0x09, 0x83, 0x41, 0x1d, 0xd0, 0xd4, 0x9f, 0x6f, 0xa7, 0xdd, 0xf4, 0xbe, 0x46, 0x4f,
	0x77, 0xfa, 0x64, 0x9c, 0xaf, 0xee, 0x94, 0xbf, 0xc8, 0xeb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x67, 0x90, 0xd5, 0xc2, 0x95, 0x03, 0x00, 0x00,
}
